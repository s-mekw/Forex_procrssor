{
  "permissions": {
    "allow": [
      "mcp__serena__list_dir",
      "Bash(mkdir:*)",
      "Bash(uv run --frozen pytest tests/unit/test_tick_model.py -v)",
      "Bash(uv run:*)",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__write_memory",
      "Bash(git add:*)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_reconnection_with_exponential_backoff -v)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py -v)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_property_methods -v)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager -v --tb=short)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_config_with_custom_values -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager -k \"not connection_success and not connection_failure and not reconnection\" -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_success -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_failure -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager -v)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_success tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_failure -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_pool_management -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager -v --tb=short --no-cov)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_connection_pool_management -v)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py::TestMT5ConnectionManager::test_health_check -xvs)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py -v --tb=short --no-cov)",
      "Bash(python -m pytest tests/unit/test_mt5_client.py -v --no-cov)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "serena"
  ],
  "outputStyle": "default",
  "comment": "Claude Code Settings - Simplified Configuration",
  "description": "ワークフローでサブエージェントを効率的に使うための最小限の設定"
}