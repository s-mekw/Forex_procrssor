[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "forex-processor"
version = "0.1.0"
description = "リアルタイムForex取引データ処理とPatchTST機械学習予測システム"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Forex Processor Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"
dependencies = [
    # データ処理・分析
    "polars>=0.20.0",
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "pyarrow>=14.0.0",
    # MT5関連
    "metatrader5>=5.0.45",
    # データベース・ストレージ
    "influxdb-client>=1.38.0",
    "fastparquet>=2023.10.1",
    # 機械学習
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "scikit-learn>=1.3.0",
    "shap>=0.45.0",
    "numba>=0.59.0",
    # Webアプリケーション
    "dash>=2.14.0",
    "dash-extensions>=1.0.0",
    "plotly>=5.17.0",
    "dash-bootstrap-components>=1.5.0",
    # API・通信
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "websockets>=12.0",
    "aiohttp>=3.9.0",
    # 設定管理
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "toml>=0.10.2",
    "tomli>=2.0.1",
    "tomli-w>=1.0.0",
    # ログ・監視
    "structlog>=23.2.0",
    "rich>=13.7.0",
    # ユーティリティ
    "python-dotenv>=1.0.0",
    "schedule>=1.2.0",
    "marimo>=0.14.17",
]

[project.optional-dependencies]
dev = [
    # テスト
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    
    # コード品質
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    
    # 開発ツール
    "ipython>=8.17.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/forex-processor"
Repository = "https://github.com/your-org/forex-processor"
Documentation = "https://forex-processor.readthedocs.io"

[project.scripts]
forex-processor = "src.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.toml", "*.yaml", "*.yml", "*.json"]

# pytest設定
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-ra",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: ユニットテストのマーカー",
    "integration: 統合テストのマーカー",
    "e2e: エンドツーエンドテストのマーカー",
    "slow: 実行時間の長いテスト",
    "mt5: MT5接続が必要なテスト",
    "influxdb: InfluxDB接続が必要なテスト",
    "gpu: GPU環境が必要なテスト",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# カバレッジ設定
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

# Black設定
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff設定（リンター・フォーマッター）
[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

# MyPy設定
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "MetaTrader5",
    "influxdb_client",
    "dash_extensions",
    "plotly.*",
]
ignore_missing_imports = true
